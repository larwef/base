version: "3"

dotenv:
  - "config.env"

env:
  # TODO: Change name. Remember to also change the name of cmd/app/.
  APP_NAME: "app"
  VERSION: "v0.0.1"
  ARTIFACTS: "./artifacts"

tasks:
  # ------------------------------------ Go ------------------------------------
  go:run:
    cmds:
      - go run cmd/{{.APP_NAME}}/main.go
    env:
      # Additions or overrides of variables from global env and env files.
      LOG_LEVEL: "debug"
      LOG_JSON: "false"

  go:lint:
    cmds:
      - golangci-lint --timeout=120s run ./...

  go:test:
    cmds:
      - go test -v ./...

  go:build:
    cmds:
      - |
        go build \
          -ldflags " \
            -X main.appName={{.APP_NAME}} \
            -X main.version={{.VERSION}} \
          " -o {{.ARTIFACTS}}/app.bin cmd/{{.APP_NAME}}/main.go
    env:
      # TODO: Change OS and ARCH if neccessary.
      GOOS: "linux"
      GOARCH: "amd64"

  go:generate:
    cmds:
      - go generate ./...

  go:update:
    cmds:
      - go get -u ./...
      - go mod tidy

  go:license-check:
    cmds:
      - go-licenses check ./... --disallowed_types=forbidden -v 1

  # ---------------------------------- Docker ----------------------------------
  docker:build:
    cmds:
      - |
        docker build -t {{.REGISTRY}}/{{.APP_NAME}}:{{.VERSION}} \
          --build-arg app_name={{.APP_NAME}} \
          --build-arg artifacts={{.ARTIFACTS}} \
          -f ./build/package/Dockerfile .

  docker:run:
    cmds:
      - |
        docker run -it --rm \
          --name {{.APP_NAME}} \
          --env=ADDRESS=:8080 \
          -p 8080:8080 \
          {{.REGISTRY}}/{{.APP_NAME}}:{{.VERSION}}

  docker:push:
    cmds:
      - docker push {{.REGISTRY}}/{{.APP_NAME}}:{{.VERSION}}

  default:
    desc: "Default task"
    cmds:
      - task --list-all
